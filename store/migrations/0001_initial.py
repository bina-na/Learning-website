# Generated by Django 5.0.7 on 2024-08-03 19:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('price', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Y', 'Pending'), ('O', 'Published')], default='Y', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('choice_a', models.CharField(max_length=255)),
                ('choice_b', models.CharField(max_length=255)),
                ('choice_c', models.CharField(max_length=255)),
                ('choice_d', models.CharField(max_length=255)),
                ('correct_answer', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_instructor', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='course_assignment', serialize=False, to='store.course')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('due_date', models.DateTimeField()),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='lessons/assignment/')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('number', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=255)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='lessons', serialize=False, to='store.course')),
                ('video_file', models.FileField(blank=True, null=True, upload_to='lessons/tutorial/')),
            ],
        ),
        migrations.CreateModel(
            name='CartCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_course', to='store.cart')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course_belongs_to', to='store.course')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course_category', to='store.category'),
        ),
        migrations.AddField(
            model_name='course',
            name='instructor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='course_instructor', to='store.instructor'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student', serialize=False, to='store.user')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('enrollment_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='instructor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='instructor', to='store.user'),
        ),
        migrations.CreateModel(
            name='AssignmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.CharField(max_length=255)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assignment_result', to='store.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='course_exam', serialize=False, to='store.course')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.question')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='course_quiz', serialize=False, to='store.lesson')),
                ('questions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.question')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_no', models.CharField(max_length=255)),
                ('payment_status', models.CharField(choices=[('P', 'Pending'), ('C', 'Complete'), ('F', 'Failed')], default='P', max_length=1)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='course_payment', to='store.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course_student', to='store.student')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('logo', models.FileField(blank=True, null=True, upload_to='certificate/logo/')),
                ('student_photo', models.FileField(blank=True, null=True, upload_to='certificate/student_photo/')),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='course_certified', to='store.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stud_certified', to='store.student')),
            ],
        ),
        migrations.CreateModel(
            name='QuizResult',
            fields=[
                ('quiz', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='quizresult', serialize=False, to='store.quiz')),
                ('score', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('assignment_result', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='track_assignment', to='store.assignmentresult')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='track_stud', to='store.student')),
                ('quiz_result', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='track_quiz', to='store.quizresult')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calculate_result', models.CharField(max_length=255)),
                ('assignment_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_grade', to='store.assignmentresult')),
                ('quiz_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_grade', to='store.quizresult')),
            ],
        ),
    ]
